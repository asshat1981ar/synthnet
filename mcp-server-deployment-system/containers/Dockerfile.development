# Development Dockerfile for MCP Server
# Optimized for development workflow with debugging capabilities

FROM python:3.11-slim

# Install development dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    vim \
    htop \
    procps \
    net-tools \
    && rm -rf /var/lib/apt/lists/*

# Create development user
RUN groupadd -r devuser && useradd -r -g devuser -s /bin/bash devuser

# Set work directory
WORKDIR /app

# Install Python development tools
RUN pip install --no-cache-dir \
    debugpy \
    pytest \
    pytest-asyncio \
    pytest-cov \
    black \
    isort \
    flake8 \
    mypy \
    ipython

# Copy requirements and install dependencies
COPY requirements*.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Install development requirements if they exist
RUN if [ -f requirements-dev.txt ]; then pip install --no-cache-dir -r requirements-dev.txt; fi

# Create directories for development
RUN mkdir -p /app/logs /app/data /app/tests && \
    chown -R devuser:devuser /app

# Set development environment variables
ENV PYTHONPATH="/app:$PYTHONPATH"
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV MCP_ENV=development
ENV DEBUG=1

# Development ports
EXPOSE 8000  # Main application
EXPOSE 8001  # Health check
EXPOSE 5678  # Debug port
EXPOSE 8888  # Jupyter/dev tools

# Switch to development user
USER devuser

# Health check for development
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=2 \
    CMD curl -f http://localhost:8001/health || exit 1

# Default command for development (with auto-reload)
CMD ["python", "-m", "mcp_server", "--reload", "--debug"]

# Labels
LABEL maintainer="MCP Deployment System" \
      version="1.0.0-dev" \
      description="Development MCP Server Container" \
      environment="development"