apiVersion: v1
kind: ServiceAccount
metadata:
  name: mcp-server
  labels:
    app: mcp-server
    component: security
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mcp-server-role
  labels:
    app: mcp-server
    component: security
rules:
# Allow reading ConfigMaps for configuration
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]

# Allow reading Secrets for credentials
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]

# Allow reading own Pod information for health checks
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
  resourceNames: []

# Allow creating Events for logging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]

# Allow reading Services for service discovery
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch"]

# Allow reading Endpoints for load balancing
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mcp-server-rolebinding
  labels:
    app: mcp-server
    component: security
subjects:
- kind: ServiceAccount
  name: mcp-server
  namespace: default
roleRef:
  kind: Role
  name: mcp-server-role
  apiGroup: rbac.authorization.k8s.io

---
# Cluster-level permissions for monitoring and service discovery
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mcp-server-cluster-role
  labels:
    app: mcp-server
    component: security
rules:
# Allow reading Nodes for cluster information
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]

# Allow reading Namespaces for multi-tenancy
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch"]

# Allow reading Ingresses for routing information
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mcp-server-cluster-rolebinding
  labels:
    app: mcp-server
    component: security
subjects:
- kind: ServiceAccount
  name: mcp-server
  namespace: default
roleRef:
  kind: ClusterRole
  name: mcp-server-cluster-role
  apiGroup: rbac.authorization.k8s.io